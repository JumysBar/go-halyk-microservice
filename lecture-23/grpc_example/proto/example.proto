syntax = "proto3";

package example;

// Нужно добавить флаг --go_opt=paths=source_relative
option go_package = "grpc_example/proto;example";

// Можно также применить такой лайфхак чтобы не писать дополнительный флаг
// option go_package = "./;example";

import "google/protobuf/any.proto";
import "google/protobuf/empty.proto";

service MySuperService {
    rpc AddUser(User) returns (Status);
    // rpc GetRandomNumber(google.protobuf.Empty) returns (int64);
    rpc GetRandomNumber(google.protobuf.Empty) returns (NumResult);
}

enum Color {
    Yellow = 0;
    White = 1;
    Black = 2;
}

message Film {
    string name = 1;
    uint64 year = 100;
}

message User {
    int64 id = 1;
    string first_name = 2;
    string last_name = 3;
    repeated string tags = 4;
    Color color = 5;
    Film favorite = 6;

    google.protobuf.Any dynamic = 8;

    message Credentials {
        string login = 1;
        string password = 2;
    }
    Credentials credentials = 7;


    oneof error {
        int32 status = 9;
        string description = 10;
        Film film = 11;
    }
}

message Status {
    int64 code = 1;
    string description = 2;
}

message NumResult {
    int64 result = 1;
}